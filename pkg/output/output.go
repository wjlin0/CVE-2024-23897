package output

import "github.com/wjlin0/CVE-2024-23897/pkg/input"

type ResultEvent struct {
	// Host is the host input on which match was found.
	Host string `json:"host,omitempty"`
	// Port is port of the host input on which match was found (if applicable).
	Port int `json:"port,omitempty"`
	// Scheme is the scheme of the host input on which match was found (if applicable).
	Scheme string `json:"scheme,omitempty"`
	// URL is the Base URL of the host input on which match was found (if applicable).
	URL string `json:"url,omitempty"`
	//Response is the response of the input.
	Response string `json:"response,omitempty"`
	// Error is the error that occurred while processing the input.
	Command string `json:"command,omitempty"`
	Error   string `json:"error,omitempty"`
	// Args is the filename of the input.
	Args string `json:"filename,omitempty"`
	// Mode is the mode of the input.
	Mode Mode `json:"Mode,omitempty"`
}

type Mode int

const (
	ModeCheck Mode = iota + 1
	ModeListAvailableCommands
	ModeReadFile
	// ModeExec 命令执行模式
	ModeExec
)

func (m Mode) String() string {
	switch m {
	case ModeCheck:
		return "Check Mode"
	case ModeListAvailableCommands:
		return "List Available Commands Mode"
	case ModeReadFile:
		return "Read File Mode"
	case ModeExec:
		return "Exec Mode"
	default:
		return "Unknown Mode"
	}
}
func NewResultEvent(target *input.Target) *ResultEvent {

	return &ResultEvent{
		Host:   target.Host,
		Port:   target.Port,
		Scheme: target.Scheme,
		URL:    target.ToString(),
	}
}
