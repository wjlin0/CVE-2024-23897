package runner

import (
	"fmt"
	"github.com/fatih/color"
	"github.com/projectdiscovery/gologger"
	"github.com/projectdiscovery/gologger/formatter"
	"github.com/projectdiscovery/gologger/levels"
	"github.com/wjlin0/CVE-2024-23897/pkg/output"
	"github.com/wjlin0/CVE-2024-23897/pkg/types"
	"strings"
)

func SetOutput(options *types.Options) {
	if options.Debug {
		gologger.DefaultLogger.SetMaxLevel(levels.LevelDebug)
	}
	if options.NoColor {
		color.NoColor = true
		gologger.DefaultLogger.SetFormatter(formatter.NewCLI(options.NoColor))
	}
}
func (r *Runner) Output(event *output.ResultEvent) {
	opts := r.options

	buffer := strings.Builder{}
	buffer.WriteRune('[')
	buffer.WriteString(color.HiRedString("CVE-2024-23897"))
	buffer.WriteRune(']')
	buffer.WriteRune(' ')
	buffer.WriteString(event.URL)
	if event.Response != "" {
		buffer.WriteRune(' ')
		buffer.WriteString(color.HiYellowString(event.Filename + " - "))
		buffer.WriteString(color.HiYellowString(event.Response))
	}
	if opts.Debug && event.Error != "" {
		buffer.WriteRune(' ')
		buffer.WriteString(color.YellowString(event.Error))
		return
	}

	fmt.Println(buffer.String())
}
