package runner

import (
	"github.com/projectdiscovery/goflags"
	"github.com/projectdiscovery/gologger"
	fileutil "github.com/projectdiscovery/utils/file"
	"github.com/wjlin0/CVE-2024-23897/pkg/types"
	"time"
)

func ParseOptions() *types.Options {

	options := &types.Options{}
	flagSet := goflags.NewFlagSet()
	flagSet.SetDescription(`CVE-2024-23897 is a tool for scanning for CVE-2024-23897`)

	flagSet.CreateGroup("input", "Input",
		flagSet.StringSliceVarP(&options.URL, "u", "url", nil, "URL to scan. (e.g. -u https://example.com)", goflags.FileCommaSeparatedStringSliceOptions),
		flagSet.StringSliceVar(&options.ListURL, "list", nil, "File containing list of URLs to scan. (e.g. -list list.txt)", goflags.FileCommaSeparatedStringSliceOptions),
		flagSet.StringSliceVarP(&options.Filename, "filename", "f", nil, "The file path that needs to be read. (e.g. -f /etc/passwd)", goflags.CommaSeparatedStringSliceOptions),
	)
	flagSet.CreateGroup("output", "Output",
		flagSet.BoolVar(&options.NoColor, "no-color", false, "Don't Use colors in output"),
	)
	flagSet.CreateGroup("debug", "Debug",
		flagSet.BoolVar(&options.Debug, "debug", false, "Enable debugging"),
		flagSet.StringSliceVarP(&options.ProxyURL, "proxy", "p", nil, "list of http/socks5 proxy to use (comma separated or file input)", goflags.FileCommaSeparatedStringSliceOptions),
		flagSet.DurationVarP(&options.InputReadTimeout, "input-read-timeout", "irt", 3*time.Minute, "timeout on input read"),
		flagSet.BoolVar(&options.DisableStdin, "no-stdin", false, "disable stdin processing"),
	)
	flagSet.CreateGroup("limit", "Limit",
		flagSet.IntVar(&options.Timeout, "timeout", 10, "time to wait in seconds before timeout"),
		flagSet.IntVarP(&options.Thread, "thread", "t", 10, "Number of concurrent threads"),
		flagSet.IntVarP(&options.RateLimit, "rate-limit", "rl", -1, "Rate limit for enumeration speed (n req/sec)"),
	)
	flagSet.SetCustomHelpText(`Examples:
Run CVE-2024-23897 on a single targets
        $ CVE-2024-23897 -url https://example.com
Run CVE-2024-23897 on a list of targets
        $ CVE-2024-23897 -list list.txt
Run CVE-2024-23897 on a single targets with filenames
        $ CVE-2024-23897 -url https://example.com -f /etc/passwd -f /etc/hostname
Run CVE-2024-23897 on a single targets a proxy server
        $ CVE-2024-23897 -url https://example.com  -proxy http://127.0.0.1:7890
Run CVE-2024-23897 on uncovering Jenkins
        $ pathScan -ue 'quake' -uq 'app: "Jenkins"' -uc -silent | CVE-2024-23897
	`)
	_ = flagSet.Parse()

	showBanner()
	options.Stdin = !options.DisableStdin && fileutil.HasStdin()

	SetOutput(options)

	err := ValidateRunEnumeration(options)

	if err != nil {
		gologger.Fatal().Msgf("options validation error: %s", err.Error())
	}

	return options
}
