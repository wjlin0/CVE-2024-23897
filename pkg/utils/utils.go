package utils

import (
	"fmt"
	"net/url"
	"strconv"
	"strings"
)

func GetSchemeHostAndPort(path string) (string, string, int) {
	var (
		protocol string = "http"
		host     string
		port     int
	)

	// 首先判断是否以 http:// 或 https:// 开头
	if strings.HasPrefix(path, "http") {
		parse, err := url.Parse(path)
		if err != nil {
			return "", "", 0
		}
		protocol = parse.Scheme
		host = parse.Hostname()
		port, _ = strconv.Atoi(parse.Port())
		if port == 0 {
			if protocol == "http" {
				port = 80
			} else {
				port = 443
			}
		}
		return protocol, host, port
	}

	// 判断是否有 /，如果有 /，则截取 / 前面的部分 不包含 /
	if strings.Contains(path, "/") {
		path = path[:strings.Index(path, "/")]
	}
	// 判断是否以 [ 开头，如果是，则是 ipv6
	if strings.HasPrefix(path, "[") {
		// 提权 host 包含 []
		host = path[1:strings.Index(path, "]")]
		// 判断是否有 :，如果有，则截取 : 后面的部分
		if strings.Contains(strings.Replace(path, fmt.Sprintf("[%s]", host), "", 1), ":") {
			port, _ = strconv.Atoi(path[len(host)+3:])
		} else {
			port = 80
		}
		return protocol, host, port
	}
	// 判断是否有 :，如果有，则截取 : 后面的部分
	if strings.Contains(path, ":") {
		host = path[:strings.Index(path, ":")]
		port, _ = strconv.Atoi(path[strings.Index(path, ":")+1:])
		return protocol, host, port
	}
	return protocol, path, 80
}
